// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.27.2
// source: proto/controlserver.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VehicleControlMode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manual        bool                   `protobuf:"varint,1,opt,name=manual,proto3" json:"manual,omitempty"`
	Offboard      bool                   `protobuf:"varint,2,opt,name=offboard,proto3" json:"offboard,omitempty"`
	Auto          bool                   `protobuf:"varint,3,opt,name=auto,proto3" json:"auto,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleControlMode) Reset() {
	*x = VehicleControlMode{}
	mi := &file_proto_controlserver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleControlMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleControlMode) ProtoMessage() {}

func (x *VehicleControlMode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleControlMode.ProtoReflect.Descriptor instead.
func (*VehicleControlMode) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{0}
}

func (x *VehicleControlMode) GetManual() bool {
	if x != nil {
		return x.Manual
	}
	return false
}

func (x *VehicleControlMode) GetOffboard() bool {
	if x != nil {
		return x.Offboard
	}
	return false
}

func (x *VehicleControlMode) GetAuto() bool {
	if x != nil {
		return x.Auto
	}
	return false
}

type ClearbotControlMode struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	JoystickControl   bool                   `protobuf:"varint,1,opt,name=joystick_control,json=joystickControl,proto3" json:"joystick_control,omitempty"`
	ObstacleAvoidance bool                   `protobuf:"varint,2,opt,name=obstacle_avoidance,json=obstacleAvoidance,proto3" json:"obstacle_avoidance,omitempty"`
	HeadingControl    bool                   `protobuf:"varint,3,opt,name=heading_control,json=headingControl,proto3" json:"heading_control,omitempty"`
	WaypointControl   bool                   `protobuf:"varint,4,opt,name=waypoint_control,json=waypointControl,proto3" json:"waypoint_control,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClearbotControlMode) Reset() {
	*x = ClearbotControlMode{}
	mi := &file_proto_controlserver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearbotControlMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearbotControlMode) ProtoMessage() {}

func (x *ClearbotControlMode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearbotControlMode.ProtoReflect.Descriptor instead.
func (*ClearbotControlMode) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{1}
}

func (x *ClearbotControlMode) GetJoystickControl() bool {
	if x != nil {
		return x.JoystickControl
	}
	return false
}

func (x *ClearbotControlMode) GetObstacleAvoidance() bool {
	if x != nil {
		return x.ObstacleAvoidance
	}
	return false
}

func (x *ClearbotControlMode) GetHeadingControl() bool {
	if x != nil {
		return x.HeadingControl
	}
	return false
}

func (x *ClearbotControlMode) GetWaypointControl() bool {
	if x != nil {
		return x.WaypointControl
	}
	return false
}

type Peripherals struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conveyor      bool                   `protobuf:"varint,1,opt,name=conveyor,proto3" json:"conveyor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Peripherals) Reset() {
	*x = Peripherals{}
	mi := &file_proto_controlserver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Peripherals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peripherals) ProtoMessage() {}

func (x *Peripherals) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peripherals.ProtoReflect.Descriptor instead.
func (*Peripherals) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{2}
}

func (x *Peripherals) GetConveyor() bool {
	if x != nil {
		return x.Conveyor
	}
	return false
}

type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperature   float32                `protobuf:"fixed32,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_proto_controlserver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{3}
}

func (x *SystemInfo) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type RobotStatusData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RobotId             int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	ArmState            bool                   `protobuf:"varint,2,opt,name=arm_state,json=armState,proto3" json:"arm_state,omitempty"`
	VehicleControlMode  *VehicleControlMode    `protobuf:"bytes,3,opt,name=vehicle_control_mode,json=vehicleControlMode,proto3" json:"vehicle_control_mode,omitempty"`
	ClearbotControlMode *ClearbotControlMode   `protobuf:"bytes,4,opt,name=clearbot_control_mode,json=clearbotControlMode,proto3" json:"clearbot_control_mode,omitempty"`
	Peripherals         *Peripherals           `protobuf:"bytes,5,opt,name=peripherals,proto3" json:"peripherals,omitempty"`
	SystemInfo          *SystemInfo            `protobuf:"bytes,6,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RobotStatusData) Reset() {
	*x = RobotStatusData{}
	mi := &file_proto_controlserver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotStatusData) ProtoMessage() {}

func (x *RobotStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotStatusData.ProtoReflect.Descriptor instead.
func (*RobotStatusData) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{4}
}

func (x *RobotStatusData) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

func (x *RobotStatusData) GetArmState() bool {
	if x != nil {
		return x.ArmState
	}
	return false
}

func (x *RobotStatusData) GetVehicleControlMode() *VehicleControlMode {
	if x != nil {
		return x.VehicleControlMode
	}
	return nil
}

func (x *RobotStatusData) GetClearbotControlMode() *ClearbotControlMode {
	if x != nil {
		return x.ClearbotControlMode
	}
	return nil
}

func (x *RobotStatusData) GetPeripherals() *Peripherals {
	if x != nil {
		return x.Peripherals
	}
	return nil
}

func (x *RobotStatusData) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type RobotStatusReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotStatusReply) Reset() {
	*x = RobotStatusReply{}
	mi := &file_proto_controlserver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotStatusReply) ProtoMessage() {}

func (x *RobotStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotStatusReply.ProtoReflect.Descriptor instead.
func (*RobotStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{5}
}

type Coordinates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float32                `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32                `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude      float32                `protobuf:"fixed32,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coordinates) Reset() {
	*x = Coordinates{}
	mi := &file_proto_controlserver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinates) ProtoMessage() {}

func (x *Coordinates) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinates.ProtoReflect.Descriptor instead.
func (*Coordinates) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{6}
}

func (x *Coordinates) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Coordinates) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Coordinates) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

type Vector3F struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector3F) Reset() {
	*x = Vector3F{}
	mi := &file_proto_controlserver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector3F) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector3F) ProtoMessage() {}

func (x *Vector3F) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector3F.ProtoReflect.Descriptor instead.
func (*Vector3F) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{7}
}

func (x *Vector3F) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector3F) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector3F) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type LocationStatusData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RobotId         int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	CurrentPosition *Coordinates           `protobuf:"bytes,2,opt,name=current_position,json=currentPosition,proto3" json:"current_position,omitempty"`
	HomePosition    *Coordinates           `protobuf:"bytes,3,opt,name=home_position,json=homePosition,proto3" json:"home_position,omitempty"`
	Velocity        *Vector3F              `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Heading         float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LocationStatusData) Reset() {
	*x = LocationStatusData{}
	mi := &file_proto_controlserver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationStatusData) ProtoMessage() {}

func (x *LocationStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationStatusData.ProtoReflect.Descriptor instead.
func (*LocationStatusData) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{8}
}

func (x *LocationStatusData) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

func (x *LocationStatusData) GetCurrentPosition() *Coordinates {
	if x != nil {
		return x.CurrentPosition
	}
	return nil
}

func (x *LocationStatusData) GetHomePosition() *Coordinates {
	if x != nil {
		return x.HomePosition
	}
	return nil
}

func (x *LocationStatusData) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *LocationStatusData) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

type LocationStatusReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationStatusReply) Reset() {
	*x = LocationStatusReply{}
	mi := &file_proto_controlserver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationStatusReply) ProtoMessage() {}

func (x *LocationStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationStatusReply.ProtoReflect.Descriptor instead.
func (*LocationStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{9}
}

type Waypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Waypoint) Reset() {
	*x = Waypoint{}
	mi := &file_proto_controlserver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Waypoint) ProtoMessage() {}

func (x *Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Waypoint.ProtoReflect.Descriptor instead.
func (*Waypoint) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{10}
}

func (x *Waypoint) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Waypoint) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type ClearbotWaypoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentWp     *Waypoint              `protobuf:"bytes,1,opt,name=current_wp,json=currentWp,proto3" json:"current_wp,omitempty"`
	RemainingWps  []*Waypoint            `protobuf:"bytes,2,rep,name=remaining_wps,json=remainingWps,proto3" json:"remaining_wps,omitempty"`
	FinishedWps   []*Waypoint            `protobuf:"bytes,3,rep,name=finished_wps,json=finishedWps,proto3" json:"finished_wps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearbotWaypoints) Reset() {
	*x = ClearbotWaypoints{}
	mi := &file_proto_controlserver_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearbotWaypoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearbotWaypoints) ProtoMessage() {}

func (x *ClearbotWaypoints) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearbotWaypoints.ProtoReflect.Descriptor instead.
func (*ClearbotWaypoints) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{11}
}

func (x *ClearbotWaypoints) GetCurrentWp() *Waypoint {
	if x != nil {
		return x.CurrentWp
	}
	return nil
}

func (x *ClearbotWaypoints) GetRemainingWps() []*Waypoint {
	if x != nil {
		return x.RemainingWps
	}
	return nil
}

func (x *ClearbotWaypoints) GetFinishedWps() []*Waypoint {
	if x != nil {
		return x.FinishedWps
	}
	return nil
}

type WaypointStreamData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Waypoints     *ClearbotWaypoints     `protobuf:"bytes,2,opt,name=waypoints,proto3" json:"waypoints,omitempty"`
	StartPosition *Coordinates           `protobuf:"bytes,3,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	RefPosition   *Coordinates           `protobuf:"bytes,4,opt,name=ref_position,json=refPosition,proto3" json:"ref_position,omitempty"`
	WpDist        float32                `protobuf:"fixed32,5,opt,name=wp_dist,json=wpDist,proto3" json:"wp_dist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaypointStreamData) Reset() {
	*x = WaypointStreamData{}
	mi := &file_proto_controlserver_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaypointStreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaypointStreamData) ProtoMessage() {}

func (x *WaypointStreamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaypointStreamData.ProtoReflect.Descriptor instead.
func (*WaypointStreamData) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{12}
}

func (x *WaypointStreamData) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

func (x *WaypointStreamData) GetWaypoints() *ClearbotWaypoints {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

func (x *WaypointStreamData) GetStartPosition() *Coordinates {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *WaypointStreamData) GetRefPosition() *Coordinates {
	if x != nil {
		return x.RefPosition
	}
	return nil
}

func (x *WaypointStreamData) GetWpDist() float32 {
	if x != nil {
		return x.WpDist
	}
	return 0
}

type WaypointStreamReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaypointStreamReply) Reset() {
	*x = WaypointStreamReply{}
	mi := &file_proto_controlserver_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaypointStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaypointStreamReply) ProtoMessage() {}

func (x *WaypointStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaypointStreamReply.ProtoReflect.Descriptor instead.
func (*WaypointStreamReply) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{13}
}

type GetRobotSetModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRobotSetModeRequest) Reset() {
	*x = GetRobotSetModeRequest{}
	mi := &file_proto_controlserver_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRobotSetModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotSetModeRequest) ProtoMessage() {}

func (x *GetRobotSetModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotSetModeRequest.ProtoReflect.Descriptor instead.
func (*GetRobotSetModeRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{14}
}

func (x *GetRobotSetModeRequest) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

type GetRobotSetModeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          string                 `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRobotSetModeData) Reset() {
	*x = GetRobotSetModeData{}
	mi := &file_proto_controlserver_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRobotSetModeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotSetModeData) ProtoMessage() {}

func (x *GetRobotSetModeData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotSetModeData.ProtoReflect.Descriptor instead.
func (*GetRobotSetModeData) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{15}
}

func (x *GetRobotSetModeData) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type GetWaypointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaypointsRequest) Reset() {
	*x = GetWaypointsRequest{}
	mi := &file_proto_controlserver_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaypointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaypointsRequest) ProtoMessage() {}

func (x *GetWaypointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaypointsRequest.ProtoReflect.Descriptor instead.
func (*GetWaypointsRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{16}
}

func (x *GetWaypointsRequest) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

type WaypointsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Waypoints     []*Waypoint            `protobuf:"bytes,1,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaypointsData) Reset() {
	*x = WaypointsData{}
	mi := &file_proto_controlserver_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaypointsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaypointsData) ProtoMessage() {}

func (x *WaypointsData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaypointsData.ProtoReflect.Descriptor instead.
func (*WaypointsData) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{17}
}

func (x *WaypointsData) GetWaypoints() []*Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

type GetPeripheralControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeripheralControlRequest) Reset() {
	*x = GetPeripheralControlRequest{}
	mi := &file_proto_controlserver_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeripheralControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeripheralControlRequest) ProtoMessage() {}

func (x *GetPeripheralControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeripheralControlRequest.ProtoReflect.Descriptor instead.
func (*GetPeripheralControlRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{18}
}

func (x *GetPeripheralControlRequest) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

type GetJoystickControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotId       int32                  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJoystickControlRequest) Reset() {
	*x = GetJoystickControlRequest{}
	mi := &file_proto_controlserver_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJoystickControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoystickControlRequest) ProtoMessage() {}

func (x *GetJoystickControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoystickControlRequest.ProtoReflect.Descriptor instead.
func (*GetJoystickControlRequest) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{19}
}

func (x *GetJoystickControlRequest) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

type VehicleThrustTorque struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Throttle      float32                `protobuf:"fixed32,1,opt,name=throttle,proto3" json:"throttle,omitempty"`
	Yaw           float32                `protobuf:"fixed32,2,opt,name=yaw,proto3" json:"yaw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleThrustTorque) Reset() {
	*x = VehicleThrustTorque{}
	mi := &file_proto_controlserver_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleThrustTorque) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleThrustTorque) ProtoMessage() {}

func (x *VehicleThrustTorque) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controlserver_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleThrustTorque.ProtoReflect.Descriptor instead.
func (*VehicleThrustTorque) Descriptor() ([]byte, []int) {
	return file_proto_controlserver_proto_rawDescGZIP(), []int{20}
}

func (x *VehicleThrustTorque) GetThrottle() float32 {
	if x != nil {
		return x.Throttle
	}
	return 0
}

func (x *VehicleThrustTorque) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

var File_proto_controlserver_proto protoreflect.FileDescriptor

var file_proto_controlserver_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x12, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6f,
	0x22, 0xc3, 0x01, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6a, 0x6f, 0x79, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x6a, 0x6f, 0x79, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x5f,
	0x61, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x77,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x29, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x6f,
	0x72, 0x22, 0x2e, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0xd0, 0x02, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a,
	0x14, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x12, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x34, 0x0a,
	0x08, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x7a, 0x22, 0xee, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66,
	0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x0a, 0x08, 0x57,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x79, 0x22, 0xad, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x74,
	0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x70, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x70, 0x73, 0x12,
	0x32, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x77, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x57, 0x70, 0x73, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x74, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x77, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x77, 0x70, 0x44, 0x69, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x57, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x33, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22,
	0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x0d, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x0a, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x79, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x68,
	0x72, 0x75, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x32, 0xd6, 0x04, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x28, 0x01, 0x12, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x79, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x79, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x68, 0x72, 0x75, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_controlserver_proto_rawDescOnce sync.Once
	file_proto_controlserver_proto_rawDescData []byte
)

func file_proto_controlserver_proto_rawDescGZIP() []byte {
	file_proto_controlserver_proto_rawDescOnce.Do(func() {
		file_proto_controlserver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_controlserver_proto_rawDesc), len(file_proto_controlserver_proto_rawDesc)))
	})
	return file_proto_controlserver_proto_rawDescData
}

var file_proto_controlserver_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_controlserver_proto_goTypes = []any{
	(*VehicleControlMode)(nil),          // 0: proto.VehicleControlMode
	(*ClearbotControlMode)(nil),         // 1: proto.ClearbotControlMode
	(*Peripherals)(nil),                 // 2: proto.Peripherals
	(*SystemInfo)(nil),                  // 3: proto.SystemInfo
	(*RobotStatusData)(nil),             // 4: proto.RobotStatusData
	(*RobotStatusReply)(nil),            // 5: proto.RobotStatusReply
	(*Coordinates)(nil),                 // 6: proto.Coordinates
	(*Vector3F)(nil),                    // 7: proto.Vector3f
	(*LocationStatusData)(nil),          // 8: proto.LocationStatusData
	(*LocationStatusReply)(nil),         // 9: proto.LocationStatusReply
	(*Waypoint)(nil),                    // 10: proto.Waypoint
	(*ClearbotWaypoints)(nil),           // 11: proto.ClearbotWaypoints
	(*WaypointStreamData)(nil),          // 12: proto.WaypointStreamData
	(*WaypointStreamReply)(nil),         // 13: proto.WaypointStreamReply
	(*GetRobotSetModeRequest)(nil),      // 14: proto.GetRobotSetModeRequest
	(*GetRobotSetModeData)(nil),         // 15: proto.GetRobotSetModeData
	(*GetWaypointsRequest)(nil),         // 16: proto.GetWaypointsRequest
	(*WaypointsData)(nil),               // 17: proto.WaypointsData
	(*GetPeripheralControlRequest)(nil), // 18: proto.GetPeripheralControlRequest
	(*GetJoystickControlRequest)(nil),   // 19: proto.GetJoystickControlRequest
	(*VehicleThrustTorque)(nil),         // 20: proto.VehicleThrustTorque
}
var file_proto_controlserver_proto_depIdxs = []int32{
	0,  // 0: proto.RobotStatusData.vehicle_control_mode:type_name -> proto.VehicleControlMode
	1,  // 1: proto.RobotStatusData.clearbot_control_mode:type_name -> proto.ClearbotControlMode
	2,  // 2: proto.RobotStatusData.peripherals:type_name -> proto.Peripherals
	3,  // 3: proto.RobotStatusData.system_info:type_name -> proto.SystemInfo
	6,  // 4: proto.LocationStatusData.current_position:type_name -> proto.Coordinates
	6,  // 5: proto.LocationStatusData.home_position:type_name -> proto.Coordinates
	7,  // 6: proto.LocationStatusData.velocity:type_name -> proto.Vector3f
	10, // 7: proto.ClearbotWaypoints.current_wp:type_name -> proto.Waypoint
	10, // 8: proto.ClearbotWaypoints.remaining_wps:type_name -> proto.Waypoint
	10, // 9: proto.ClearbotWaypoints.finished_wps:type_name -> proto.Waypoint
	11, // 10: proto.WaypointStreamData.waypoints:type_name -> proto.ClearbotWaypoints
	6,  // 11: proto.WaypointStreamData.start_position:type_name -> proto.Coordinates
	6,  // 12: proto.WaypointStreamData.ref_position:type_name -> proto.Coordinates
	10, // 13: proto.WaypointsData.waypoints:type_name -> proto.Waypoint
	4,  // 14: proto.ControlService.SendRobotStatus:input_type -> proto.RobotStatusData
	8,  // 15: proto.ControlService.SendLocationStatus:input_type -> proto.LocationStatusData
	12, // 16: proto.ControlService.SendWaypointStream:input_type -> proto.WaypointStreamData
	14, // 17: proto.ControlService.GetRobotSetModeStream:input_type -> proto.GetRobotSetModeRequest
	16, // 18: proto.ControlService.GetWaypointsStream:input_type -> proto.GetWaypointsRequest
	18, // 19: proto.ControlService.GetPeripheralControlStream:input_type -> proto.GetPeripheralControlRequest
	19, // 20: proto.ControlService.GetJoystickControlStream:input_type -> proto.GetJoystickControlRequest
	5,  // 21: proto.ControlService.SendRobotStatus:output_type -> proto.RobotStatusReply
	9,  // 22: proto.ControlService.SendLocationStatus:output_type -> proto.LocationStatusReply
	9,  // 23: proto.ControlService.SendWaypointStream:output_type -> proto.LocationStatusReply
	15, // 24: proto.ControlService.GetRobotSetModeStream:output_type -> proto.GetRobotSetModeData
	17, // 25: proto.ControlService.GetWaypointsStream:output_type -> proto.WaypointsData
	2,  // 26: proto.ControlService.GetPeripheralControlStream:output_type -> proto.Peripherals
	20, // 27: proto.ControlService.GetJoystickControlStream:output_type -> proto.VehicleThrustTorque
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_controlserver_proto_init() }
func file_proto_controlserver_proto_init() {
	if File_proto_controlserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_controlserver_proto_rawDesc), len(file_proto_controlserver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_controlserver_proto_goTypes,
		DependencyIndexes: file_proto_controlserver_proto_depIdxs,
		MessageInfos:      file_proto_controlserver_proto_msgTypes,
	}.Build()
	File_proto_controlserver_proto = out.File
	file_proto_controlserver_proto_goTypes = nil
	file_proto_controlserver_proto_depIdxs = nil
}
